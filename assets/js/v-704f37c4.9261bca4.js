"use strict";(self.webpackChunkqcloud_im_server_sdk_java=self.webpackChunkqcloud_im_server_sdk_java||[]).push([[308],{5743:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-704f37c4",path:"/guide/message.html",title:"单聊消息",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"单发单聊消息",slug:"单发单聊消息",children:[]},{level:2,title:"批量发单聊消息",slug:"批量发单聊消息",children:[]},{level:2,title:"导入单聊消息",slug:"导入单聊消息",children:[]},{level:2,title:"查询单聊消息",slug:"查询单聊消息",children:[]},{level:2,title:"撤回单聊消息",slug:"撤回单聊消息",children:[]},{level:2,title:"设置单聊消息已读",slug:"设置单聊消息已读",children:[]},{level:2,title:"查询单聊未读消息计数",slug:"查询单聊未读消息计数",children:[]}],filePathRelative:"guide/message.md",git:{updatedTime:1638088079e3,contributors:[{name:"Yang Libin",email:"szuyanglb@outlook.com",commits:6},{name:"怡蘅",email:"hongyihengg@gmail.com",commits:1}]}}},7335:(n,s,a)=>{a.r(s),a.d(s,{default:()=>B});var t=a(6252);const p=(0,t.uE)('<h1 id="单聊消息" tabindex="-1"><a class="header-anchor" href="#单聊消息" aria-hidden="true">#</a> 单聊消息</h1><h2 id="单发单聊消息" tabindex="-1"><a class="header-anchor" href="#单发单聊消息" aria-hidden="true">#</a> 单发单聊消息</h2><ul><li>管理员向帐号发消息，接收方看到消息发送者是管理员。</li><li>管理员指定某一帐号向其他帐号发消息，接收方看到发送者不是管理员，而是管理员指定的帐号。</li><li>该接口不会检查发送者和接收者的好友关系（包括黑名单），同时不会检查接收者是否被禁言。</li><li>该接口默认不会检查接收者对发送者是否设置了免打扰，如需检查，请在&quot;SendMsgControl&quot;字段填上&quot;WithMuteNotifications&quot;。</li><li>单聊消息 MsgSeq 字段的作用及说明：该字段在发送消息时由用户自行指定，该值可以重复，非后台生成，非全局唯一。与群聊消息的 MsgSeq 字段不同，群聊消息的 MsgSeq 由后台生成，每个群都维护一个 MsgSeq，从 1 开始严格递增。单聊消息历史记录对同一个会话的消息先以时间戳排序，同秒内的消息再以 MsgSeq 排序。</li></ul><p>使用示例：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">TIMTextMsgElement</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TIMTextMsgElement</span><span class="token punctuation">(</span><span class="token string">&quot;hello world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TIMMsgElement</span><span class="token punctuation">&gt;</span></span> msgBody <span class="token operator">=</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">SendMsgRequest</span> request <span class="token operator">=</span> <span class="token class-name">SendMsgRequest</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">fromAccount</span><span class="token punctuation">(</span><span class="token string">&quot;test1&quot;</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">toAccount</span><span class="token punctuation">(</span><span class="token string">&quot;test2&quot;</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">msgRandom</span><span class="token punctuation">(</span><span class="token number">123L</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">msgBody</span><span class="token punctuation">(</span>msgBody<span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">syncOtherMachine</span><span class="token punctuation">(</span><span class="token class-name">SyncOtherMachine</span><span class="token punctuation">.</span>YES<span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">msgTimeStamp</span><span class="token punctuation">(</span><span class="token number">1631934058</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">msgLifeTime</span><span class="token punctuation">(</span><span class="token number">604800</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token class-name">SendMsgResult</span> result <span class="token operator">=</span> client<span class="token punctuation">.</span>message<span class="token punctuation">.</span><span class="token function">sendMsg</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="批量发单聊消息" tabindex="-1"><a class="header-anchor" href="#批量发单聊消息" aria-hidden="true">#</a> 批量发单聊消息</h2><ul><li>支持一次对最多 500 个用户进行单发消息。</li><li>与单发消息相比，该接口更适用于营销类消息、系统通知 tips 等时效性较强的消息。</li><li>若消息不需要计入未读数，也不需要存储聊天记录，则可将 MsgLifeTime 字段设置为 0，这样可以带来更快的消息下发速度。</li><li>管理员指定某一帐号向目标帐号批量发消息，接收方看到发送者不是管理员，而是管理员指定的帐号。</li><li>该接口不触发回调请求。</li><li>该接口不会检查发送者和接收者的好友关系（包括黑名单），同时不会检查接收者是否被禁言。</li><li>该接口默认不会检查接收者对发送者是否设置了免打扰，如需检查，请在&quot;SendMsgControl&quot;字段填上&quot;WithMuteNotifications&quot;。</li><li>单聊消息 MsgSeq 字段的作用及说明：该字段在发送消息时由用户自行指定，该值可以重复，非后台生成，非全局唯一。与群聊消息的 MsgSeq 字段不同，群聊消息的 MsgSeq 由后台生成，每个群都维护一个 MsgSeq，从 1 开始严格递增。单聊消息历史记录对同一个会话的消息先以时间戳排序，同秒内的消息再以 MsgSeq 排序。</li></ul><p>使用示例：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> toAccount <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;test1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;test2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">TIMTextMsgElement</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TIMTextMsgElement</span><span class="token punctuation">(</span><span class="token string">&quot;hi bingo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TIMMsgElement</span><span class="token punctuation">&gt;</span></span> msgBody <span class="token operator">=</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">BatchSendMsgRequest</span> request <span class="token operator">=</span> <span class="token class-name">BatchSendMsgRequest</span>\n        <span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">toAccount</span><span class="token punctuation">(</span>toAccount<span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">msgRandom</span><span class="token punctuation">(</span><span class="token number">123L</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">msgBody</span><span class="token punctuation">(</span>msgBody<span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">syncOtherMachine</span><span class="token punctuation">(</span><span class="token class-name">SyncOtherMachine</span><span class="token punctuation">.</span>NO<span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">msgSeq</span><span class="token punctuation">(</span><span class="token number">28460L</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token class-name">BatchSendMsgResult</span> result <span class="token operator">=</span> client<span class="token punctuation">.</span>message<span class="token punctuation">.</span><span class="token function">batchSendMsg</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="导入单聊消息" tabindex="-1"><a class="header-anchor" href="#导入单聊消息" aria-hidden="true">#</a> 导入单聊消息</h2><ul><li>导入历史单聊消息到即时通信 IM。</li><li>平滑过渡期间，将原有即时通信实时单聊消息导入到即时通信 IM。</li><li>该接口会更新会话。</li><li>该接口不会触发回调。</li><li>对于同一个单聊会话的消息，该接口会根据 MsgSeq ， MsgRandom ， MsgTimeStamp 字段的值对导入的消息进行去重。<strong>仅当这三个字段的值都对应相同时，才判定消息是重复的，消息是否重复与消息内容本身无关。</strong> 另外，若两条消息的 MsgSeq ， MsgRandom ， MsgTimeStamp 字段对应相同，而 from_account 和 to_account 相反，则这两条消息也认为是重复的。</li><li>重复导入的消息不会覆盖之前已导入的消息（即消息内容以首次导入的为准）。</li><li>单聊消息 MsgSeq 字段的作用及说明：该字段在发送消息时由用户自行指定，该值可以重复，非后台生成，非全局唯一。与群聊消息的 MsgSeq 字段不同，群聊消息的 MsgSeq 由后台生成，每个群都维护一个 MsgSeq，从 1 开始严格递增。单聊消息历史记录对同一个会话的消息先以时间戳排序，同秒内的消息再以 MsgSeq 排序。</li></ul><p>使用示例：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">TIMTextMsgElement</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TIMTextMsgElement</span><span class="token punctuation">(</span><span class="token string">&quot;hello bingo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TIMMsgElement</span><span class="token punctuation">&gt;</span></span> msgBody <span class="token operator">=</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">ImportMsgRequest</span> request <span class="token operator">=</span> <span class="token class-name">ImportMsgRequest</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">fromAccount</span><span class="token punctuation">(</span><span class="token string">&quot;bingo&quot;</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">toAccount</span><span class="token punctuation">(</span><span class="token string">&quot;test1&quot;</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">msgRandom</span><span class="token punctuation">(</span><span class="token number">122L</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">msgTimeStamp</span><span class="token punctuation">(</span><span class="token number">1557387418</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">msgBody</span><span class="token punctuation">(</span>msgBody<span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token class-name">ImportMsgResult</span> result <span class="token operator">=</span> client<span class="token punctuation">.</span>message<span class="token punctuation">.</span><span class="token function">importMsg</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="查询单聊消息" tabindex="-1"><a class="header-anchor" href="#查询单聊消息" aria-hidden="true">#</a> 查询单聊消息</h2>',14),e=(0,t.uE)('<li>管理员按照时间范围查询某单聊会话的消息记录。</li><li>查询的单聊会话由请求中的 From_Account 和 To_Account 指定。查询结果包含会话双方互相发送的消息，具体每条消息的发送方和接收方由每条消息里的 From_Account 和 To_Account 指定。</li><li>一般情况下，请求中的 From_Account 和 To_Account 字段值互换，查询结果不变。但通过 <a href="#%E5%8D%95%E5%8F%91%E5%8D%95%E8%81%8A%E6%B6%88%E6%81%AF">单发单聊消息</a> 或 <a href="#%E6%89%B9%E9%87%8F%E5%8F%91%E5%8D%95%E8%81%8A%E6%B6%88%E6%81%AF">批量发单聊消息</a> 接口发送的消息，如果指定 SyncOtherMachine 值为 2，则需要指定正确的 From_Account 和 To_Account 字段值才能查询到该消息。 例如，通过 <a href="#%E5%8D%95%E5%8F%91%E5%8D%95%E8%81%8A%E6%B6%88%E6%81%AF">单发单聊消息</a> 接口指定帐号 A 给帐号 B 发一条消息，同时指定 SyncOtherMachine 值为 2。则调用本接口时，From_Account 必须设置为帐号 B，To_Account 必须设置为帐号 A 才能查询到该消息。</li><li>查询结果包含被撤回的消息，由消息里的 MsgFlagBits 字段标识。</li><li>若想通过 <a href="#%E6%92%A4%E5%9B%9E%E5%8D%95%E8%81%8A%E6%B6%88%E6%81%AF">撤回单聊消息</a> 接口撤回某条消息，可先用本接口查询出该消息的 MsgKey，然后再调用撤回接口进行撤回。</li>',5),c=(0,t.Uk)("可查询的消息记录的时间范围取决于漫游消息存储时长，默认是 7 天。支持在控制台修改消息漫游时长，延长消息漫游时长是增值服务。具体请参考 "),o={href:"https://cloud.tencent.com/document/product/269/3571#.E6.BC.AB.E6.B8.B8.E6.B6.88.E6.81.AF.E5.AD.98.E5.82.A8",target:"_blank",rel:"noopener noreferrer"},l=(0,t.Uk)("漫游消息存储"),u=(0,t.Uk)("。"),i=(0,t._)("li",null,"若请求时间段内的消息总大小超过应答包体大小限制（目前为 13K）时，则需要续拉。您可以通过应答中的 Complete 字段查看是否已拉取请求的全部消息。",-1),k=(0,t.uE)('<p>使用示例：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">AdminGetRoamMsgRequest</span> request <span class="token operator">=</span> <span class="token class-name">AdminGetRoamMsgRequest</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">fromAccount</span><span class="token punctuation">(</span><span class="token string">&quot;test1&quot;</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">toAccount</span><span class="token punctuation">(</span><span class="token string">&quot;test2&quot;</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">maxCnt</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">minTime</span><span class="token punctuation">(</span><span class="token number">1631934000</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">maxTime</span><span class="token punctuation">(</span><span class="token number">1631934060</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        \n<span class="token class-name">AdminRoamMsgResult</span> result <span class="token operator">=</span> client<span class="token punctuation">.</span>message<span class="token punctuation">.</span><span class="token function">getRoamMsg</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MsgListItem</span><span class="token punctuation">&gt;</span></span> msgList <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">getMsgList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>msgList <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> msgList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MsgListItem</span> item <span class="token operator">:</span> msgList<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TIMMsgElement</span><span class="token punctuation">&gt;</span></span> msgBody <span class="token operator">=</span> item<span class="token punctuation">.</span><span class="token function">getMsgBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>msgBody <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> msgList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">TIMMsgElement</span> msgElement <span class="token operator">:</span> msgBody<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token comment">// 根据 msgType 强转为对应的子类</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>msgElement<span class="token punctuation">.</span><span class="token function">getMsgType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">MsgType</span><span class="token punctuation">.</span>TIM_CUSTOM_ELEM<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token class-name">TIMCustomMsgElement</span> t <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TIMCustomMsgElement</span><span class="token punctuation">)</span> msgElement<span class="token punctuation">;</span>\n                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">getMsgContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDesc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>msgElement<span class="token punctuation">.</span><span class="token function">getMsgType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">MsgType</span><span class="token punctuation">.</span>TIM_TEXT_ELEM<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token class-name">TIMTextMsgElement</span> t <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TIMTextMsgElement</span><span class="token punctuation">)</span> msgElement<span class="token punctuation">;</span>\n                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">getMsgContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h2 id="撤回单聊消息" tabindex="-1"><a class="header-anchor" href="#撤回单聊消息" aria-hidden="true">#</a> 撤回单聊消息</h2>',3),r=(0,t._)("li",null,"管理员撤回单聊消息。",-1),m=(0,t._)("li",null,[(0,t.Uk)("该接口可以撤回所有单聊消息，包括客户端发出的单聊消息，由 "),(0,t._)("a",{href:"#%E5%8D%95%E5%8F%91%E5%8D%95%E8%81%8A%E6%B6%88%E6%81%AF"},"单发"),(0,t.Uk)(" 和 "),(0,t._)("a",{href:"#%E6%89%B9%E9%87%8F%E5%8F%91%E5%8D%95%E8%81%8A%E6%B6%88%E6%81%AF"},"批量发"),(0,t.Uk)(" 接口发出的单聊消息。")],-1),g=(0,t.Uk)("若需要撤回由客户端发出的单聊消息，您可以开通 "),b={href:"https://cloud.tencent.com/document/product/269/38980",target:"_blank",rel:"noopener noreferrer"},d=(0,t.Uk)("发单聊消息之前回调"),f=(0,t.Uk)(" 或 "),M={href:"https://cloud.tencent.com/document/product/269/38980",target:"_blank",rel:"noopener noreferrer"},h=(0,t.Uk)("发单聊消息之后回调"),q=(0,t.Uk)(" ，通过该回调接口记录每条单聊消息的 MsgKey ，然后填在本接口的 MsgKey 字段进行撤回。您也可以通过 "),E=(0,t._)("a",{href:"#%E6%9F%A5%E8%AF%A2%E5%8D%95%E8%81%8A%E6%B6%88%E6%81%AF"},"查询单聊消息",-1),v=(0,t.Uk)(" 查询出待撤回的单聊消息的 MsgKey 后，填在本接口的 MsgKey 字段进行撤回。"),A=(0,t._)("li",null,[(0,t.Uk)("若需要撤回由 "),(0,t._)("a",{href:"#%E5%8D%95%E5%8F%91%E5%8D%95%E8%81%8A%E6%B6%88%E6%81%AF"},"单发"),(0,t.Uk)(" 和 "),(0,t._)("a",{href:"#%E6%89%B9%E9%87%8F%E5%8F%91%E5%8D%95%E8%81%8A%E6%B6%88%E6%81%AF"},"批量发"),(0,t.Uk)(" 接口发出的单聊消息，需要记录这些接口回包里的 MsgKey 字段以进行撤回。")],-1),y=(0,t._)("li",null,"调用该接口撤回消息后，该条消息的离线、漫游存储，以及消息发送方和接收方的客户端的本地缓存都会被撤回。",-1),_=(0,t._)("li",null,"该接口可撤回的单聊消息没有时间限制，即可以撤回任何时间的单聊消息。",-1),T=(0,t.uE)('<div class="custom-container warning"><p class="custom-container-title">注意</p><p>使用该接口撤回单聊消息后，被撤回的消息不能恢复，请谨慎调用该接口。</p></div><p>使用示例：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">AdminMsgWithdrawRequest</span> request <span class="token operator">=</span> <span class="token class-name">AdminMsgWithdrawRequest</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">fromAccount</span><span class="token punctuation">(</span><span class="token string">&quot;test1&quot;</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">toAccount</span><span class="token punctuation">(</span><span class="token string">&quot;bingo&quot;</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">msgKey</span><span class="token punctuation">(</span><span class="token string">&quot;31906_833502_1572869830&quot;</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token class-name">AdminMsgWithdrawResult</span> result <span class="token operator">=</span> client<span class="token punctuation">.</span>message<span class="token punctuation">.</span><span class="token function">msgWithdraw</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="设置单聊消息已读" tabindex="-1"><a class="header-anchor" href="#设置单聊消息已读" aria-hidden="true">#</a> 设置单聊消息已读</h2><ul><li>设置用户的某个单聊会话的消息已读。</li></ul><p>使用示例：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">AdminSetMsgReadRequest</span> request <span class="token operator">=</span> <span class="token class-name">AdminSetMsgReadRequest</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">reportAccount</span><span class="token punctuation">(</span><span class="token string">&quot;test1&quot;</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">peerAccount</span><span class="token punctuation">(</span><span class="token string">&quot;test2&quot;</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token class-name">AdminSetMsgReadResult</span> result <span class="token operator">=</span> client<span class="token punctuation">.</span>message<span class="token punctuation">.</span><span class="token function">setMsgRead</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="查询单聊未读消息计数" tabindex="-1"><a class="header-anchor" href="#查询单聊未读消息计数" aria-hidden="true">#</a> 查询单聊未读消息计数</h2><p>App 后台可以通过该接口查询特定帐号的单聊总未读数（包含所有的单聊会话）或者单个单聊会话的未读数。</p><p>使用示例：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">GetC2cUnreadMsgRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GetC2cUnreadMsgRequest</span><span class="token punctuation">(</span><span class="token string">&quot;test2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> peerAccount <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;test1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bingo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nrequest<span class="token punctuation">.</span><span class="token function">setPeerAccount</span><span class="token punctuation">(</span>peerAccount<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token class-name">C2cUnreadMsgNumResult</span> result <span class="token operator">=</span> client<span class="token punctuation">.</span>message<span class="token punctuation">.</span><span class="token function">getC2cUnreadMsgNum</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>',11),S={},B=(0,a(3744).Z)(S,[["render",function(n,s){const a=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[p,(0,t._)("ul",null,[e,(0,t._)("li",null,[c,(0,t._)("a",o,[l,(0,t.Wm)(a)]),u]),i]),k,(0,t._)("ul",null,[r,m,(0,t._)("li",null,[g,(0,t._)("a",b,[d,(0,t.Wm)(a)]),f,(0,t._)("a",M,[h,(0,t.Wm)(a)]),q,E,v]),A,y,_]),T],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);